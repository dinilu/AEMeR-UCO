{
  "hash": "a3d28d319999ee89e02219c010d62c2c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Modelos Generalizados de Disimilitud en R\"\nsubtitle: \"Generalized Dissimilarity Models (GDM)\"\nauthor: \"Diego Nieto Lugilde\"\ndate: 10/17/2024\ninstitute: \"Universidad de Córdoba (España)\"\nslide-number: true\nformat:\n  revealjs:\n    logo: img/logos.png\n    footer: \"[AEMeR](https://dnietolugilde.com/AEMeR)\"\n    scrollable: true\n    chalkboard: true\ninclude-in-header: \n  text: |\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\nlightbox: auto\neditor: source\n---\n\n\n\n# Preparando los datos\n\nUsaremos el paquete `gdm`. Éste tiene una forma particular de funcionar y especificar los datos. Así que necesitamos prepararlos un poco antes de empezar\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gdm)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n## Cargamos los datos de Michelle, incluyendo las coordenadas geográficas\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\nenv <- read.xlsx(\"data/sciberras_ambiente.xlsx\", \n                 sheet = 1, \n                 rowNames = TRUE)\ncom <- read.xlsx(\"data/sciberras_especies.xlsx\", \n                 sheet = 1, \n                 rowNames = TRUE)\ncoords <- read.xlsx(\"data/sciberras_coords.xlsx\", \n                    sheet = 1, \n                    rowNames = TRUE)\nhead(coords)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  x         y\nchapad    -57.70311 -38.20977\nsauce     -61.11647 -38.99773\nquequens  -60.51297 -38.92499\nclaromeco -60.08128 -38.86156\nquequeng  -58.70162 -38.58077\nmoro      -58.40547 -38.50085\n```\n\n\n:::\n:::\n\n\n\n\n## Cargamos los datos bioclimáticos \n\nEn particular cargamos los datos de argentina en formato ráster y en UTM 21s y los recorto para la región de interés\n\n::: {.callout-note}\nEstos datos los generamos durante la clase sobre análisis de datos espaciales en R.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1-2|3-4|5\"}\nlibrary(terra)\nbioclim <- rast(\"arg_bio_utm.tif\")\nbioclim <- crop(bioclim, \n                ext(-100000, 600000, 5500000, 6000000))\nplot(bioclim[[1]])\n```\n\n::: {.cell-output-display}\n![](AEMER-4-GDM_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n\n## Reproyecto los datos de coordenadas a UTM 21s y los combino con los datos de comunidades\n\n::: {.callout-important}\nEl paquete `gdm` requiere que las coordenadas estén especificadas como columnas en la matriz de comunidades, en la matriz de variables ambientales, o en las dos; pero no se pueden especificar como un objeto independiente.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1-3|4-6|7-8|9\"}\nutm <- project(as.matrix(coords), \n               from = \"EPSG: 4326\", \n               to = \"EPSG:32721\")\nutm <- data.frame(x = utm[,1], \n                  y = utm[,2],\n                  rio = rownames(coords))\ncom$rio <- env$rio\ncom <- merge(com, utm)\nhead(com)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     rio emertonia sextonis_1 sextonis_2 sextonis_delamarei\n1 chapad         0          0          0                  0\n2 chapad         6         12          0                  1\n3 chapad         1          4          0                  0\n4 chapad         0          0          0                  0\n5 chapad         0          0          0                  0\n6 chapad         2          0          0                  0\n  halectinosoma_parejae nannopus ectinosomatidae euterpina\n1                     1        0               0         0\n2                     1        0               0         0\n3                     0        0               0         0\n4                     0        3               0         0\n5                     0        1               0         0\n6                     0       10               0         0\n  quinquelaophonte_aestuarii cyclopoida        x       y\n1                          0          0 438444.6 5770677\n2                          0          0 438444.6 5770677\n3                          0          0 438444.6 5770677\n4                          0          0 438444.6 5770677\n5                          0          0 438444.6 5770677\n6                          0          0 438444.6 5770677\n```\n\n\n:::\n:::\n\n\n\n\n## Genero un identificador de sitio común para la matriz de comunidades y la de variables ambientales\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncom$site_id <- as.numeric(1:nrow(com))\nenv$site_id <- as.numeric(1:nrow(com))\nhead(env)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              rio sitio     mes materia_org temperatura salinidad   ph site_id\nchapad_f_d chapad   des febrero   0.6026517        22.1      1.18 8.71       1\nchapad_f_n chapad norte febrero   0.8458035        21.7      2.89 8.61       2\nchapad_f_s chapad   sur febrero   0.6467259        22.8      2.86 8.62       3\nchapad_j_d chapad   des   julio   0.7584830        11.0      2.20 9.09       4\nchapad_j_n chapad norte   julio   0.8047438        10.8      3.20 9.07       5\nchapad_j_s chapad   sur   julio   0.7331378        12.4      0.98 9.07       6\n```\n\n\n:::\n:::\n\n\n\n\n# Calibrando modelos GDM\n\nUsamos el paquete `gdm`\n\n## Creamos la tabla de disimilaridades\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1-8|10-16|18\"}\nlibrary(gdm)\ngdmTab <- formatsitepair(com[,-1], # Quito la columna `río`\n               bioFormat = 1, \n               abundance = TRUE, \n               XColumn = \"x\", # Nombre de la coordenada X\n               YColumn = \"y\", # Nombre de la coordenada Y\n               siteColumn = \"site_id\", # Nombre del identificador\n               predData = env[,-c(1:3)]) # Quito columnas de texto\n\ngdmRast <- formatsitepair(com[,-1],\n               bioFormat = 1, \n               abundance = TRUE, \n               XColumn = \"x\",\n               YColumn = \"y\", \n               siteColumn = \"site_id\",\n               predData = bioclim)\n\nhead(gdmTab)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              distance weights s1.xCoord s1.yCoord s2.xCoord s2.yCoord\nchapad_f_d   0.9047619       1  438444.6   5770677  438444.6   5770677\nchapad_f_d.1 1.0000000       1  438444.6   5770677  438444.6   5770677\nchapad_f_d.2 1.0000000       1  438444.6   5770677  438444.6   5770677\nchapad_f_d.3 1.0000000       1  438444.6   5770677  438444.6   5770677\nchapad_f_d.4 1.0000000       1  438444.6   5770677  438444.6   5770677\nchapad_f_d.5 1.0000000       1  438444.6   5770677  438444.6   5770677\n             s1.materia_org s1.temperatura s1.salinidad s1.ph s2.materia_org\nchapad_f_d        0.6026517           22.1         1.18  8.71      0.8458035\nchapad_f_d.1      0.6026517           22.1         1.18  8.71      0.6467259\nchapad_f_d.2      0.6026517           22.1         1.18  8.71      0.7584830\nchapad_f_d.3      0.6026517           22.1         1.18  8.71      0.8047438\nchapad_f_d.4      0.6026517           22.1         1.18  8.71      0.7331378\nchapad_f_d.5      0.6026517           22.1         1.18  8.71      0.8279125\n             s2.temperatura s2.salinidad s2.ph\nchapad_f_d             21.7         2.89  8.61\nchapad_f_d.1           22.8         2.86  8.62\nchapad_f_d.2           11.0         2.20  9.09\nchapad_f_d.3           10.8         3.20  9.07\nchapad_f_d.4           12.4         0.98  9.07\nchapad_f_d.5           17.2         2.49  8.90\n```\n\n\n:::\n:::\n\n\n\n\n## Calibramos los modelos\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2|3\"}\n# Activo que incluya la distancia geográfica en el análisis\ngdmTab.fit <- gdm(data=gdmTab, geo=TRUE)\ngdmRast.fit <- gdm(data=gdmRast, geo=TRUE)\n```\n:::\n\n\n\n\n# Analicemos los resultados\n\n## Veamos los resultados de los datos de Michelle\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(gdmTab.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \n[1] \n[1] GDM Modelling Summary\n[1] Creation Date:  Tue Sep  9 18:24:21 2025\n[1] \n[1] Name:  gdmTab.fit\n[1] \n[1] Data:  gdmTab\n[1] \n[1] Samples:  2485\n[1] \n[1] Geographical distance used in model fitting?  TRUE\n[1] \n[1] NULL Deviance:  884.14\n[1] GDM Deviance:  851.866\n[1] Percent Deviance Explained:  3.65\n[1] \n[1] Intercept:  1.437\n[1] \n[1] PREDICTOR ORDER BY SUM OF I-SPLINE COEFFICIENTS:\n[1] \n[1] Predictor 1: ph\n[1] Splines: 3\n[1] Min Knot: 7.27\n[1] 50% Knot: 8.85\n[1] Max Knot: 9.66\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0.98\n[1] Sum of coefficients for ph: 0.98\n[1] \n[1] Predictor 2: materia_org\n[1] Splines: 3\n[1] Min Knot: 0.34\n[1] 50% Knot: 0.675\n[1] Max Knot: 1.37\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0.391\n[1] Coefficient[3]: 0.326\n[1] Sum of coefficients for materia_org: 0.718\n[1] \n[1] Predictor 3: salinidad\n[1] Splines: 3\n[1] Min Knot: 0.15\n[1] 50% Knot: 2.67\n[1] Max Knot: 3.49\n[1] Coefficient[1]: 0.436\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for salinidad: 0.436\n[1] \n[1] Predictor 4: Geographic\n[1] Splines: 3\n[1] Min Knot: 0\n[1] 50% Knot: 96436.034\n[1] Max Knot: 309976.305\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0.136\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for Geographic: 0.136\n[1] \n[1] Predictor 5: temperatura\n[1] Splines: 3\n[1] Min Knot: 6.5\n[1] 50% Knot: 17.2\n[1] Max Knot: 24\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for temperatura: 0\n```\n\n\n:::\n:::\n\n\n\n\n## ... y los del modelo calibrado con variables bioclimáticas\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(gdmRast.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \n[1] \n[1] GDM Modelling Summary\n[1] Creation Date:  Tue Sep  9 18:24:21 2025\n[1] \n[1] Name:  gdmRast.fit\n[1] \n[1] Data:  gdmRast\n[1] \n[1] Samples:  28\n[1] \n[1] Geographical distance used in model fitting?  TRUE\n[1] \n[1] NULL Deviance:  7.644\n[1] GDM Deviance:  1.316\n[1] Percent Deviance Explained:  82.787\n[1] \n[1] Intercept:  0.164\n[1] \n[1] PREDICTOR ORDER BY SUM OF I-SPLINE COEFFICIENTS:\n[1] \n[1] Predictor 1: bio1\n[1] Splines: 3\n[1] Min Knot: 14.108\n[1] 50% Knot: 14.234\n[1] Max Knot: 14.463\n[1] Coefficient[1]: 0.672\n[1] Coefficient[2]: 0.931\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio1: 1.602\n[1] \n[1] Predictor 2: bio10\n[1] Splines: 3\n[1] Min Knot: 19.769\n[1] 50% Knot: 20.108\n[1] Max Knot: 20.521\n[1] Coefficient[1]: 0.916\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio10: 0.916\n[1] \n[1] Predictor 3: bio11\n[1] Splines: 3\n[1] Min Knot: 8.418\n[1] 50% Knot: 8.574\n[1] Max Knot: 8.888\n[1] Coefficient[1]: 0.472\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio11: 0.472\n[1] \n[1] Predictor 4: bio16\n[1] Splines: 3\n[1] Min Knot: 234\n[1] 50% Knot: 260.931\n[1] Max Knot: 264.393\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0.282\n[1] Sum of coefficients for bio16: 0.282\n[1] \n[1] Predictor 5: bio5\n[1] Splines: 3\n[1] Min Knot: 26.8\n[1] 50% Knot: 26.99\n[1] Max Knot: 28.2\n[1] Coefficient[1]: 0.148\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio5: 0.148\n[1] \n[1] Predictor 6: Geographic\n[1] Splines: 3\n[1] Min Knot: 13038.405\n[1] 50% Knot: 137784.596\n[1] Max Knot: 309919.344\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for Geographic: 0\n[1] \n[1] Predictor 7: bio2\n[1] Splines: 3\n[1] Min Knot: 10.662\n[1] 50% Knot: 11.037\n[1] Max Knot: 12.348\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio2: 0\n[1] \n[1] Predictor 8: bio3\n[1] Splines: 3\n[1] Min Knot: 46.564\n[1] 50% Knot: 47.058\n[1] Max Knot: 48.499\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio3: 0\n[1] \n[1] Predictor 9: bio4\n[1] Splines: 3\n[1] Min Knot: 458.966\n[1] 50% Knot: 465.267\n[1] Max Knot: 497.734\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio4: 0\n[1] \n[1] Predictor 10: bio6\n[1] Splines: 3\n[1] Min Knot: 2.739\n[1] 50% Knot: 3.496\n[1] Max Knot: 4.183\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio6: 0\n[1] \n[1] Predictor 11: bio7\n[1] Splines: 3\n[1] Min Knot: 22.897\n[1] 50% Knot: 23.354\n[1] Max Knot: 25.461\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio7: 0\n[1] \n[1] Predictor 12: bio8\n[1] Splines: 3\n[1] Min Knot: 15.431\n[1] 50% Knot: 17.728\n[1] Max Knot: 18.157\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio8: 0\n[1] \n[1] Predictor 13: bio9\n[1] Splines: 3\n[1] Min Knot: 8.418\n[1] 50% Knot: 9.225\n[1] Max Knot: 11.148\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio9: 0\n[1] \n[1] Predictor 14: bio12\n[1] Splines: 3\n[1] Min Knot: 699.386\n[1] 50% Knot: 868.321\n[1] Max Knot: 894.97\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio12: 0\n[1] \n[1] Predictor 15: bio13\n[1] Splines: 3\n[1] Min Knot: 84\n[1] 50% Knot: 91.041\n[1] Max Knot: 99\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio13: 0\n[1] \n[1] Predictor 16: bio14\n[1] Splines: 3\n[1] Min Knot: 31.889\n[1] 50% Knot: 47.5\n[1] Max Knot: 51\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio14: 0\n[1] \n[1] Predictor 17: bio15\n[1] Splines: 3\n[1] Min Knot: 16.885\n[1] 50% Knot: 18.46\n[1] Max Knot: 30.845\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio15: 0\n[1] \n[1] Predictor 18: bio17\n[1] Splines: 3\n[1] Min Knot: 101.889\n[1] 50% Knot: 169.587\n[1] Max Knot: 174\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio17: 0\n[1] \n[1] Predictor 19: bio18\n[1] Splines: 3\n[1] Min Knot: 208.388\n[1] 50% Knot: 234.902\n[1] Max Knot: 245.595\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio18: 0\n[1] \n[1] Predictor 20: bio19\n[1] Splines: 3\n[1] Min Knot: 101.889\n[1] 50% Knot: 176.446\n[1] Max Knot: 204.362\n[1] Coefficient[1]: 0\n[1] Coefficient[2]: 0\n[1] Coefficient[3]: 0\n[1] Sum of coefficients for bio19: 0\n```\n\n\n:::\n:::\n\n\n\n::: {.callout-important}\nFijaros como el modelo explica un 80% de la desvianza de los datos. Pero tiene un poco de truco, ya que este modelo solo contempla el río como unidad de muestreo, al caer las 3 parcelas (desembocadura, norte y sur) en el mismo pixel.\n:::\n\n\n## Podemos graficar los resultados del modelo y las curvas i-spline\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(gdmTab.fit, plot.layout=c(2,3))\n```\n\n::: {.cell-output-display}\n![](AEMER-4-GDM_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n\n## ... también las del modelo bioclimático\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(gdmRast.fit, plot.layout = c(2, 4))\n```\n\n::: {.cell-output-display}\n![](AEMER-4-GDM_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n\n\n## Si necesitamos realizar gráficos independientes, podemos extraer los valores de las curvas i-splines\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1|2\"}\ngdmRast.splines <- isplineExtract(gdmRast.fit)\nstr(gdmRast.splines)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ x: num [1:200, 1:20] 13038 14530 16022 17514 19006 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:20] \"Geographic\" \"bio1\" \"bio2\" \"bio3\" ...\n $ y: num [1:200, 1:20] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:20] \"Geographic\" \"bio1\" \"bio2\" \"bio3\" ...\n```\n\n\n:::\n:::\n\n\n\n\n## ... y posteriormente graficarlas a mano\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(gdmRast.splines[[\"x\"]][,\"bio1\"], \n     gdmRast.splines[[\"y\"]][,\"bio1\"], \n     lwd=3,\n     type=\"l\", \n     xlab=\"Mean Annual Temperature (ºC)\", \n     ylab=\"Partial ecological distance\")\n```\n\n::: {.cell-output-display}\n![](AEMER-4-GDM_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n\n\n# Usemos el modelo para realizar proyecciones\n\n\n## Podemos proyectar el modelo para transformar cada variable ambiental acorde a las i-splines\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngdmRast.sp_trans <- gdm.transform(gdmRast.fit, bioclim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n|---------|---------|---------|---------|\n=========================================\n                                          \n```\n\n\n:::\n\n```{.r .cell-code}\ngdmRast.sp_trans\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \nsize        : 500, 700, 7  (nrow, ncol, nlyr)\nresolution  : 1000, 1000  (x, y)\nextent      : -100055.4, 599944.6, 5500177, 6000177  (xmin, xmax, ymin, ymax)\ncoord. ref. : WGS 84 / UTM zone 21S (EPSG:32721) \nsource      : spat_27ecbc759f8_10220_o8up7yuDdJ6XHBX.tif \nnames       : xCoord, yCoord,     bio1,     bio5,     bio10,     bio11, ... \nmin values  :      0,      0, 0.000000, 0.000000, 0.0000000, 0.0000000, ... \nmax values  :      0,      0, 1.602153, 0.147566, 0.9155284, 0.4720007, ... \n```\n\n\n:::\n:::\n\n\n\n\n## ... y graficarlo en forma de mapa\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nterra::plot(gdmRast.sp_trans)\n```\n\n::: {.cell-output-display}\n![](AEMER-4-GDM_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n\n\n## Para reducir la dimensionalidad de las distintas capas, usamos un ACP para seleccionar los tres primeros ejes\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1|3-4|6-8|10\"}\npca.rast <- prcomp(gdmRast.sp_trans)\n\n# note the use of the 'index' argument\npca.rast <- terra::predict(gdmRast.sp_trans, pca.rast, index=1:3)\n\n# scale rasters\nmnmx <- range(values(pca.rast), na.rm = TRUE)\npca.rast <- ((pca.rast - mnmx[1]) / diff(mnmx)) * 255\n\npca.rast\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \nsize        : 500, 700, 3  (nrow, ncol, nlyr)\nresolution  : 1000, 1000  (x, y)\nextent      : -100055.4, 599944.6, 5500177, 6000177  (xmin, xmax, ymin, ymax)\ncoord. ref. : WGS 84 / UTM zone 21S (EPSG:32721) \nsource(s)   : memory\nnames       :       PC1,       PC2,     PC3 \nmin values  :  27.01396,  21.78634,   0.000 \nmax values  : 255.00000, 124.18582, 125.431 \n```\n\n\n:::\n:::\n\n\n\n\n## Y luego representar cada eje como un componente de color (rojo, azul y verde)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nterra::plotRGB(pca.rast, r=1, g=2, b=3)\n```\n\n::: {.cell-output-display}\n![](AEMER-4-GDM_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n\n\n## También podemos analizar cambios en cada pixel entre dos periodos concretos\n\nPrimero habrá que generar un objeto raster con los datos climáticos modificados\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1|2\"}\nfut_bioclim <- bioclim\nfut_bioclim[[1]] <- fut_bioclim[[1]] + 0.5\n```\n:::\n\n\n\n\n## Posteriormente hacemos la predicción y se dibuja el mapa\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1-4|5-7\"}\ntimePred <- predict(gdmRast.fit, \n                    bioclim, \n                    time = T, \n                    predRasts = fut_bioclim)\nterra::plot(timePred)\n```\n\n::: {.cell-output-display}\n![](AEMER-4-GDM_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n",
    "supporting": [
      "AEMER-4-GDM_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}