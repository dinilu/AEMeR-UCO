{
  "hash": "e14516dad5b911d4cd9be4ff562ef2bf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Análisis multivariante en R\"\nauthor: \"Diego Nieto Lugilde\"\ndate: 10/16/2024\ninstitute: \"Universidad de Córdoba (España)\"\nslide-number: true\nformat:\n  revealjs:\n    logo: img/logos.png\n    footer: \"[AEMeR](https://dnietolugilde.com/AEMeR)\"\n    scrollable: true\n    chalkboard: true\ninclude-in-header: \n  text: |\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\nlightbox: auto\neditor: source\n---\n\n\n\n# Preparación de datos\n\n## Análisis multivariante usa **datos tabulados**\n\n|            | sp_1 | sp_2 | ... | sp_n |\n|:----------:|:----:|:----:|:---:|:----:|\n| **site_1** |  1   |  0   | ... |  1   |\n| **site_2** |  0   |  0   | ... |  1   |\n|  **...**   | ...  | ...  | ... | ...  |\n| **site_n** |  0   |  1   | ... |  1   |\n\n: Matriz de comunidades (sitios x especies) {.table}\n\n## También los datos de las variables ambientales\n\n|            | v_1 | v_2 | ... | v_n |\n|:----------:|:---:|:---:|:---:|:---:|\n| **site_1** |  1  |  0  | ... |  1  |\n| **site_2** |  0  |  0  | ... |  1  |\n|  **...**   | ... | ... | ... | ... |\n| **site_n** |  0  |  1  | ... |  1  |\n\n: Matriz de variables (sitios x variables) {.table}\n\n## Cargando de datos en R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\ncom <- read.xlsx(\"data/Inventarios.xlsx\", sheet = 1, rowNames = TRUE)\nhead(com)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Sp_1 Sp_2 Sp_3 Sp_4 Sp_5 Sp_6\nSite_1    0    0    9    0    2    0\nSite_2    1    0    8    0    1    0\nSite_3    2    1    7    0    1    0\nSite_4    2    1    0    1    5    0\nSite_5    1    2    0    0    6    0\nSite_6    0    4    0    2    3    0\n```\n\n\n:::\n\n```{.r .cell-code}\nenv <- read.xlsx(\"data/Variables.xlsx\", sheet = 1, rowNames = TRUE)\nhead(env)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              v1         v2         v3\nSite_1 5.1789918 -0.4380167  2.8471131\nSite_2 4.4714402  1.8806640 -0.3560559\nSite_3 2.9379526 -0.3054643  3.2177157\nSite_4 0.7354044 -1.9925002  1.2593483\nSite_5 2.6035489 -2.5324108  1.9391404\nSite_6 0.6951173  2.8438965 -1.2821121\n```\n\n\n:::\n:::\n\n\n\n## Los nombres de especies largos pueden saturar los gráficos \n\n-   Si la identidad es irrelevante: **usar nombres genéricos**\n    -   Quercus ilex: SP_1\n-   Si la identidad de la especie es relevante: **acortar**\n    -   Quercus ilex: Q_ILEX\n-   Cornell Ecology Program (CEP) proporciona una abreviatura estandarizada:\n    -   8 caracteres: 4 primeros del género y 4 de la especie:\n    -   Quercus ilex: QUERILEX\n\n\n## Transformación de valores de dominancia-abundancia\n\n| Índice Braun-Blanquet | Valor de Van deer Maarel |\n|:---------------------:|:------------------------:|\n|       ausencia        |            0             |\n|           r           |            1             |\n|          \\+           |            2             |\n|           1           |            3             |\n|          2m           |            4             |\n|          2a           |            5             |\n|          2b           |            6             |\n|           3           |            7             |\n|           4           |            8             |\n|           5           |            9             |\n: {.table .table-striped .sm}\n\n\n## Datos de presencia-ausencia\n\nLos análisis con datos de presencia-ausencia suelen ser más robustos que los de abundancia o cobertura\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npres <- ifelse(com > 0, 1, 0)\nhead(pres)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Sp_1 Sp_2 Sp_3 Sp_4 Sp_5 Sp_6\nSite_1    0    0    1    0    1    0\nSite_2    1    0    1    0    1    0\nSite_3    1    1    1    0    1    0\nSite_4    1    1    0    1    1    0\nSite_5    1    1    0    0    1    0\nSite_6    0    1    0    1    1    0\n```\n\n\n:::\n:::\n\n\n\n# Análisis de ordenación en R\n\nPara el análisis de vegetación en R hay un paquete muy útil: `vegan`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"vegan\")\nlibrary(vegan)\n```\n:::\n\n\n\n## Análisis de componentes principales (PCA)\n\nAunque parezca confuso, se usa la función `rda`.\n\n::: callout-note\nAsí se juntan la aproximación *unconstrained* y su equivalente *constrained* en la misma función. Si se especifican variables ambientales se ejecuta la versión *constrained*. Si no se especifican se ejecuta la versión *unconstrained*.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(vegan)\ncom_pca <- rda(com)\ncom_pca\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: rda(X = com)\n\n-- Model Summary --\n\n              Inertia Rank\nTotal           25.54     \nUnconstrained   25.54    6\n\nInertia is variance\n\n-- Eigenvalues --\n\nEigenvalues for unconstrained axes:\n   PC1    PC2    PC3    PC4    PC5    PC6 \n11.855  8.544  3.847  0.941  0.325  0.027 \n```\n\n\n:::\n:::\n\n\n\n\n## Análisis de redundancia (RDA)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncom_rda <- rda(com, env)\ncom_rda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: rda(X = com, Y = env)\n\n-- Model Summary --\n\n              Inertia Proportion Rank\nTotal         25.5395     1.0000     \nConstrained   14.2138     0.5565    3\nUnconstrained 11.3256     0.4435    6\n\nInertia is variance\n\n-- Eigenvalues --\n\nEigenvalues for constrained axes:\n RDA1  RDA2  RDA3 \n7.435 6.190 0.589 \n\nEigenvalues for unconstrained axes:\n  PC1   PC2   PC3   PC4   PC5   PC6 \n8.109 1.250 1.054 0.694 0.200 0.018 \n```\n\n\n:::\n:::\n\n\n\n\n## Análisis de correspondencia (CA)\n\nAunque parezca confuso, para CA y CCA se usa la función `cca`.\n\n::: callout-note\nAsí se juntan la aproximación *unconstrained* y su equivalente *constrained* en la misma función. Si se especifican variables ambientales se ejecuta la versión *constrained*. Si no se especifican se ejecuta la versión *unconstrained*.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncom_ca <- cca(com)\ncom_ca\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: cca(X = com)\n\n-- Model Summary --\n\n              Inertia Rank\nTotal           1.336     \nUnconstrained   1.336    5\n\nInertia is scaled Chi-square\n\n-- Eigenvalues --\n\nEigenvalues for unconstrained axes:\n   CA1    CA2    CA3    CA4    CA5 \n0.5359 0.3371 0.3013 0.1014 0.0600 \n```\n\n\n:::\n:::\n\n\n\n\n## Análisis de correspondencia sin tendencia (DCA)\n\nPara DCA se usa la función `decorana`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncom_dca <- decorana(com)\ncom_dca\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\ndecorana(veg = com) \n\nDetrended correspondence analysis with 26 segments.\nRescaling of axes with 4 iterations.\nTotal inertia (scaled Chi-square): 1.3356 \n\n                       DCA1   DCA2    DCA3    DCA4\nEigenvalues          0.5017 0.3112 0.16425 0.17184\nAdditive Eigenvalues 0.5017 0.3102 0.14014 0.09521\nDecorana values      0.5359 0.1160 0.05699 0.01393\nAxis lengths         2.8105 1.6228 1.09955 1.12945\n```\n\n\n:::\n:::\n\n\n\n\n## Análisis de correspondencia canónica (CCA)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncom_cca <- cca(com, env)\ncom_cca\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: cca(X = com, Y = env)\n\n-- Model Summary --\n\n              Inertia Proportion Rank\nTotal          1.3356     1.0000     \nConstrained    0.6556     0.4909    3\nUnconstrained  0.6800     0.5091    5\n\nInertia is scaled Chi-square\n\n-- Eigenvalues --\n\nEigenvalues for constrained axes:\n  CCA1   CCA2   CCA3 \n0.3345 0.2740 0.0471 \n\nEigenvalues for unconstrained axes:\n   CA1    CA2    CA3    CA4    CA5 \n0.4669 0.1206 0.0436 0.0395 0.0093 \n```\n\n\n:::\n:::\n\n\n\n\n## PCA basado en transformaciones\n\nPara ello se transforman los datos con la función `decostand`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncom_hel <- decostand(com, 'hellinger')\n\ncom_tbpca <- rda(com_hel)\ncom_tbpca\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: rda(X = com_hel)\n\n-- Model Summary --\n\n              Inertia Rank\nTotal          0.3778     \nUnconstrained  0.3778    6\n\nInertia is variance\n\n-- Eigenvalues --\n\nEigenvalues for unconstrained axes:\n    PC1     PC2     PC3     PC4     PC5     PC6 \n0.16155 0.10550 0.07101 0.03200 0.00440 0.00333 \n```\n\n\n:::\n:::\n\n\n\n\n## PCA basado en transformaciones\n\nPara ello se transforman los datos con la función `decostand`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncom_tbrda <- rda(com_hel, env)\ncom_tbrda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: rda(X = com_hel, Y = env)\n\n-- Model Summary --\n\n              Inertia Proportion Rank\nTotal          0.3778     1.0000     \nConstrained    0.1657     0.4387    3\nUnconstrained  0.2120     0.5613    6\n\nInertia is variance\n\n-- Eigenvalues --\n\nEigenvalues for constrained axes:\n   RDA1    RDA2    RDA3 \n0.09114 0.06063 0.01398 \n\nEigenvalues for unconstrained axes:\n    PC1     PC2     PC3     PC4     PC5     PC6 \n0.15218 0.03174 0.01660 0.00743 0.00243 0.00165 \n```\n\n\n:::\n:::\n\n\n\n\n## Visualizar ordenación\n\nEs interesante observar como se disponen especies y sitios en el espacio bidimensional. \n\nPara ello usamos la función `plot` sobre cualquiera de los objetos de ordenación.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(com_ca)\n```\n\n::: {.cell-output-display}\n![](AEMER-3_Analisis_multivariante_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n\n## ¿Gráficos sobrecargados?\n\nPuedes representar solo 'especies' o 'sitios' con el argumento `display`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(com_ca, display = \"sites\")\n```\n\n::: {.cell-output-display}\n![](AEMER-3_Analisis_multivariante_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n\n```{.r .cell-code}\nplot(com_ca, display = \"species\")\n```\n\n::: {.cell-output-display}\n![](AEMER-3_Analisis_multivariante_files/figure-revealjs/unnamed-chunk-12-2.png){width=960}\n:::\n:::\n\n\n\n\n# Análisis de clasificación en R\n\n## Medida de disimilitud\n\nPara calcular la disimilitud entre todos los 'sitios' usamos la función `vegdist`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- vegdist(com)\ndist\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Site_1     Site_2     Site_3     Site_4     Site_5     Site_6\nSite_2  0.14285714                                                       \nSite_3  0.27272727 0.14285714                                            \nSite_4  0.80000000 0.78947368 0.60000000                                 \nSite_5  0.80000000 0.78947368 0.70000000 0.22222222                      \nSite_6  0.80000000 0.89473684 0.80000000 0.44444444 0.44444444           \nSite_7  0.77777778 0.88235294 0.88888889 0.37500000 0.50000000 0.37500000\nSite_8  0.88235294 0.87500000 0.76470588 0.60000000 0.60000000 0.20000000\nSite_9  0.77777778 0.76470588 0.66666667 0.25000000 0.50000000 0.50000000\nSite_10 0.81818182 0.80952381 0.63636364 0.50000000 0.50000000 0.40000000\nSite_11 0.47826087 0.45454545 0.39130435 0.61904762 0.71428571 0.80952381\nSite_12 0.52380952 0.50000000 0.42857143 0.57894737 0.68421053 0.78947368\nSite_13 0.71428571 0.70000000 0.61904762 0.47368421 0.57894737 0.68421053\nSite_14 0.90909091 0.80952381 0.72727273 0.60000000 0.80000000 0.80000000\nSite_15 0.80000000 0.78947368 0.80000000 0.33333333 0.22222222 0.66666667\nSite_16 0.78947368 0.77777778 0.78947368 0.29411765 0.17647059 0.64705882\nSite_17 0.78947368 0.77777778 0.68421053 0.29411765 0.52941176 0.52941176\nSite_18 0.65217391 0.63636364 0.65217391 0.33333333 0.33333333 0.61904762\nSite_19 0.83333333 0.91304348 0.83333333 0.36363636 0.36363636 0.45454545\nSite_20 0.61904762 0.70000000 0.71428571 0.36842105 0.36842105 0.57894737\n            Site_7     Site_8     Site_9    Site_10    Site_11    Site_12\nSite_2                                                                   \nSite_3                                                                   \nSite_4                                                                   \nSite_5                                                                   \nSite_6                                                                   \nSite_7                                                                   \nSite_8  0.69230769                                                       \nSite_9  0.42857143 0.69230769                                            \nSite_10 0.77777778 0.41176471 0.44444444                                 \nSite_11 0.78947368 0.88888889 0.47368421 0.39130435                      \nSite_12 0.76470588 0.87500000 0.41176471 0.33333333 0.09090909           \nSite_13 0.64705882 0.87500000 0.29411765 0.33333333 0.18181818 0.20000000\nSite_14 0.77777778 0.76470588 0.44444444 0.45454545 0.39130435 0.42857143\nSite_15 0.50000000 0.86666667 0.50000000 0.70000000 0.71428571 0.68421053\nSite_16 0.46666667 0.85714286 0.46666667 0.68421053 0.70000000 0.66666667\nSite_17 0.46666667 0.71428571 0.06666667 0.36842105 0.40000000 0.33333333\nSite_18 0.47368421 0.77777778 0.47368421 0.73913043 0.58333333 0.54545455\nSite_19 0.40000000 0.68421053 0.60000000 0.75000000 0.84000000 0.82608696\nSite_20 0.41176471 0.75000000 0.52941176 0.80952381 0.63636364 0.60000000\n           Site_13    Site_14    Site_15    Site_16    Site_17    Site_18\nSite_2                                                                   \nSite_3                                                                   \nSite_4                                                                   \nSite_5                                                                   \nSite_6                                                                   \nSite_7                                                                   \nSite_8                                                                   \nSite_9                                                                   \nSite_10                                                                  \nSite_11                                                                  \nSite_12                                                                  \nSite_13                                                                  \nSite_14 0.33333333                                                       \nSite_15 0.57894737 0.80000000                                            \nSite_16 0.55555556 0.78947368 0.05882353                                 \nSite_17 0.22222222 0.36842105 0.52941176 0.50000000                      \nSite_18 0.54545455 0.73913043 0.14285714 0.20000000 0.50000000           \nSite_19 0.73913043 0.83333333 0.27272727 0.33333333 0.61904762 0.28000000\nSite_20 0.60000000 0.80952381 0.26315789 0.22222222 0.55555556 0.09090909\n           Site_19\nSite_2            \nSite_3            \nSite_4            \nSite_5            \nSite_6            \nSite_7            \nSite_8            \nSite_9            \nSite_10           \nSite_11           \nSite_12           \nSite_13           \nSite_14           \nSite_15           \nSite_16           \nSite_17           \nSite_18           \nSite_19           \nSite_20 0.30434783\n```\n\n\n:::\n:::\n\n\n\n## Tipos de distancias\n\nLa disimilitud entre 'sitios' se puede calcular de varias maneras: `euclidean`, `manhattan`, `gower`, `canberra`, `bray`, `jaccard`...\n\nPara ello usamos el argumento `method`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- vegdist(com, method=\"euclidean\")\ndist <- vegdist(com, method=\"bray\")\ndist <- vegdist(com, method=\"jaccard\")\nhead(dist)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2500000 0.4285714 0.8888889 0.8888889 0.8888889 0.8750000\n```\n\n\n:::\n:::\n\n\n\n\n## Clasificación jerárquica\n\nPara ello usamos la función `hclust` sobre la matriz de distancias\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhc <- hclust(dist)\nhc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nhclust(d = dist)\n\nCluster method   : complete \nDistance         : jaccard \nNumber of objects: 20 \n```\n\n\n:::\n:::\n\n\n\n\n## Métodos de agrupación\n\nMétodos para realizar la agrupación hay varios: `single`, `complete`, `average`, `centroid`...\n\nEspecificamos el método con el argumento `method`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhc <- hclust(dist, method=\"single\")\nhc <- hclust(dist, method=\"centroid\")\nhc <- hclust(dist, method=\"average\")\nhc <- hclust(dist, method=\"complete\")\nhc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nhclust(d = dist, method = \"complete\")\n\nCluster method   : complete \nDistance         : jaccard \nNumber of objects: 20 \n```\n\n\n:::\n:::\n\n\n\n\n## Visualizar clasificaciones\n\nLas clasificaciones jerárquicas se pueden visualizar como un árbol filogenético con la función `plot`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hc, hang=-1)\n```\n\n::: {.cell-output-display}\n![](AEMER-3_Analisis_multivariante_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n\n\n## Interpretación\n\nEstablecer grupos en un árbol no es siempre trivial\n\n-   Se puede usar un umbral para determinar los grupos\n-   O establecer un número determinado de grupos\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](AEMER-3_Analisis_multivariante_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n\n\n## Visualizar clasificaciones con un umbral\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hc, hang=-1) \nrect.hclust(hc, h=0.7)\n```\n\n::: {.cell-output-display}\n![](AEMER-3_Analisis_multivariante_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n\n\n## Visualizar clasificaciones con número de grupos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hc, hang=-1)\nrect.hclust(hc, k=4)\n```\n\n::: {.cell-output-display}\n![](AEMER-3_Analisis_multivariante_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n\n\n## Extraer grupos\n\nEn ocasiones es interesante extraer la asignación de cada sitio a un grupo\n\nPara ello podemos usar la función `cutree`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrp <- cutree(hc, h=0.7)\ngrp <- cutree(hc, k=4)\ngrp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Site_1  Site_2  Site_3  Site_4  Site_5  Site_6  Site_7  Site_8  Site_9 Site_10 \n      1       1       1       2       2       3       2       3       4       4 \nSite_11 Site_12 Site_13 Site_14 Site_15 Site_16 Site_17 Site_18 Site_19 Site_20 \n      4       4       4       4       2       2       4       2       2       2 \n```\n\n\n:::\n:::\n\n\n\n\n# Combinar ordenación y agrupamientos\n\n## Dibujar agrupamientos sobre los gráficos de ordenación\n\nPara ello usamos la función `ordihull`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(com_ca, display=\"sites\")\nordihull(com_ca, grp, lty=2, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](AEMER-3_Analisis_multivariante_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n\n## Hay más opciones...\n\nTambién se pueden usar las funciones `ordispider` y `ordiellipse`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(com_ca, display=\"sites\")\nordispider(com_ca, grp, lty=2, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](AEMER-3_Analisis_multivariante_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n## ... que elegirás en función de tu necesidad\n\nPara ello usamos las funciones `ordispider` y `ordiellipse`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(com_ca, display=\"sites\")\nordiellipse(com_ca, grp, lty=2, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](AEMER-3_Analisis_multivariante_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n",
    "supporting": [
      "AEMER-3_Analisis_multivariante_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}